# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-25 18:32
from __future__ import unicode_literals

import core.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0031_chart_description'),
    ]

    operations = [
        migrations.AddField(
            model_name='chart',
            name='changed',
            field=models.DateTimeField(auto_now=True, help_text='Time when chart was changed last time.', verbose_name='changed'),
        ),
        migrations.AlterField(
            model_name='map',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='maps', to='core.Category', verbose_name='categories'),
        ),
        migrations.AlterField(
            model_name='map',
            name='changed',
            field=models.DateTimeField(auto_now=True, help_text='Time when map was changed last time.', verbose_name='changed'),
        ),
        migrations.AlterField(
            model_name='map',
            name='date_of_information',
            field=models.DateField(blank=True, default=django.utils.timezone.now, help_text='An year or date when the information was measured.', verbose_name='date'),
        ),
        migrations.AlterField(
            model_name='map',
            name='description',
            field=models.TextField(blank=True, help_text='Map description.', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='map',
            name='end_color',
            field=core.models.ColorField(default='ffeda0', help_text='The color to fill regions with the lowest value.', max_length=6, verbose_name='end color'),
        ),
        migrations.AlterField(
            model_name='map',
            name='grades',
            field=models.PositiveSmallIntegerField(default=8, help_text='How many grades you would like to have', verbose_name='title'),
        ),
        migrations.AlterField(
            model_name='map',
            name='logarithmic_scale',
            field=models.BooleanField(default=False, help_text='If True - logarithmic scale will be used.', verbose_name='logarithmic scale'),
        ),
        migrations.AlterField(
            model_name='map',
            name='opacity',
            field=models.DecimalField(decimal_places=2, default=0.7, help_text='The opacity for regions.', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='opacity'),
        ),
        migrations.AlterField(
            model_name='map',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maps', to='core.Polygon', verbose_name='region'),
        ),
        migrations.AlterField(
            model_name='map',
            name='slug',
            field=models.SlugField(editable=False, help_text='The slug that will be user for urls.', verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='map',
            name='start_color',
            field=core.models.ColorField(default='bd0026', help_text='The color to fill regions with the highest value.', max_length=6, verbose_name='start color'),
        ),
        migrations.AlterField(
            model_name='map',
            name='title',
            field=models.CharField(help_text='Map title.', max_length=256, verbose_name='title'),
        ),
        migrations.AlterField(
            model_name='map',
            name='unit',
            field=models.CharField(blank=True, help_text='The unit that will be used for the map.', max_length=64, verbose_name='unit'),
        ),
        migrations.AlterField(
            model_name='map',
            name='user',
            field=models.ForeignKey(help_text='Map owner.', on_delete=django.db.models.deletion.CASCADE, related_name='maps', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
    ]
